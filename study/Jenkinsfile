pipeline {
    agent any
    environment {
        IMAGE_NAME  = "rheonik/study-1.1"
        NETWORK_NAME = "jonnee-network"
    }
    stages {
        stage("Checkout SCM") {
            steps {
                checkout scm
            }
        }
        stage("Build Application") {
            steps {
                dir('study') {
                    // Maven 빌드를 통해 target 폴더에 JAR 파일 생성 (pom.xml 파일이 study 폴더 내에 있다고 가정)
                    sh "mvn clean package -DskipTests"
                }
            }
        }
        stage("Build Docker Image") {
            steps {
                dir('study') {
                    // 생성된 JAR 파일을 포함한 Docker 이미지를 빌드
                    sh "docker build --platform linux/amd64 -t ${IMAGE_NAME} ."
                }
            }
        }
        stage("Cleanup Existing Containers") {
            steps {
                sh 'docker rm -f mysql-test || true'
                sh 'docker rm -f spring-docker-test || true'
            }
        }
        stage("Run MySQL Container") {
            steps {
                sh "docker run --network ${NETWORK_NAME} --name mysql-test -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=testdb -p 3306:3306 -d mysql:8.0"
            }
        }
        stage("Run Spring Container") {
            steps {
                sh "docker run -d -p 8888:8888 --network ${NETWORK_NAME} --name spring-docker-test ${IMAGE_NAME}"
            }
        }
    }
    post {
        always {
            echo "Pipeline finished."
        }
        success {
            echo "Build and deployment succeeded!"
        }
        failure {
            echo "Build or deployment failed."
        }
    }
}
