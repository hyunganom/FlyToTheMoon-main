pipeline {
    agent any
    tools {
        jdk 'JDK11'
        maven 'MAVEN_HOME'
    }
    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out source code...'
                checkout scm
            }
        }
        stage('Build Application') {
            steps {
                echo 'Building the application with Maven...'
                dir('study') {
                    sh 'ls -la'
                    sh 'mvn clean package -DskipTests'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                echo 'Building Docker image...'
                dir('study') {
                    sh 'docker build -t jonneedev/study-0.0.1-snapshot.jar .'
                }
            }
        }
        stage('Deploy Blue Version') {
            steps {
                echo 'Deploying the Blue version using Docker Compose...'
                dir('study') {
                    sh 'docker-compose -f docker-compose.yml up -d app_blue'
                }
            }
        }
        // 헬스체크 단계는 스킵 또는 제거합니다.
        stage('Switch Traffic to Blue') {
            steps {
                echo 'Switching traffic to Blue version via Nginx update...'
                dir('study') {
                    sh "sed -i.bak 's/server app_green:8888;/server app_blue:8889;/' ./nginx/conf.d/spring_app.conf"
                }
                sh 'docker exec nginx nginx -s reload'
            }
        }
        stage('Remove Green Version') {
            steps {
                echo 'Removing the Green version container...'
                dir('study') {
                    sh 'docker-compose -f docker-compose.yml rm -f app_green'
                }
            }
        }
    }
    post {
        always {
            echo 'Pipeline finished.'
        }
        success {
            echo 'Build and deployment succeeded!'
        }
        failure {
            echo 'Build or deployment failed.'
        }
    }
}
